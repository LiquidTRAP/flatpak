From: Will Thompson <wjt@endlessm.com>
Date: Wed, 22 Aug 2018 18:59:15 +0100
Subject: installation: document nullability of some arch/branch params

I've inferred this by walking through the code, which ultimately calls
one of flatpak_build_[app|runtime]_ref() which both implement these
defaults.

Closes: #1995
Approved by: alexlarsson

(cherry picked from commit b0f873646704c1e1b05eafbc7d7f277baf94ee94)
---
 common/flatpak-installation.c | 12 ++++++++----
 1 file changed, 8 insertions(+), 4 deletions(-)

diff --git a/common/flatpak-installation.c b/common/flatpak-installation.c
index 4237463..cf9a47d 100644
--- a/common/flatpak-installation.c
+++ b/common/flatpak-installation.c
@@ -1984,8 +1984,10 @@ flatpak_installation_update (FlatpakInstallation    *self,
  * @self: a #FlatpakInstallation
  * @kind: what this ref contains (an #FlatpakRefKind)
  * @name: name of the app or runtime to uninstall
- * @arch: architecture of the app or runtime to uninstall
- * @branch: name of the branch of the app or runtime to uninstall
+ * @arch: (nullable): architecture of the app or runtime to uninstall; if
+ *  %NULL, flatpak_get_default_arch() is assumed
+ * @branch: (nullable): name of the branch of the app or runtime to uninstall;
+ *  if %NULL, `master` is assumed
  * @progress: (scope call) (nullable): the callback
  * @progress_data: (closure progress) (nullable): user data passed to @progress
  * @cancellable: (nullable): a #GCancellable
@@ -2018,8 +2020,10 @@ flatpak_installation_uninstall (FlatpakInstallation    *self,
  * @flags: set of #FlatpakUninstallFlags flags
  * @kind: what this ref contains (an #FlatpakRefKind)
  * @name: name of the app or runtime to uninstall
- * @arch: architecture of the app or runtime to uninstall
- * @branch: name of the branch of the app or runtime to uninstall
+ * @arch: (nullable): architecture of the app or runtime to uninstall; if
+ *  %NULL, flatpak_get_default_arch() is assumed
+ * @branch: (nullable): name of the branch of the app or runtime to uninstall;
+ *  if %NULL, `master` is assumed
  * @progress: (scope call) (nullable): the callback
  * @progress_data: (closure progress) (nullable): user data passed to @progress
  * @cancellable: (nullable): a #GCancellable
